CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE admins (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        username character varying(100) NOT NULL,
        password_hash character varying(255) NOT NULL,
        created_at timestamp with time zone NOT NULL,
        normalized_username character varying(100) NOT NULL,
        role character varying(25) NOT NULL,
        CONSTRAINT admins_pkey PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE app_assets (
        asset_key character varying(100) NOT NULL,
        asset_data jsonb NOT NULL,
        CONSTRAINT app_assets_pkey PRIMARY KEY (asset_key)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE influencer_codes_categories (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        category_name character varying(100) NOT NULL,
        max_codes_per_user_in_group integer NOT NULL DEFAULT 1,
        CONSTRAINT influencer_codes_categories_pkey PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE notifications_data (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        title character varying(255) NOT NULL,
        description character varying(512) NOT NULL,
        created_at timestamp with time zone NOT NULL,
        action_path character varying(350) NOT NULL,
        action_type integer NOT NULL,
        visibility integer NOT NULL,
        anonymous_clicks integer NOT NULL DEFAULT 0,
        payload jsonb NOT NULL DEFAULT ('{}'::jsonb),
        CONSTRAINT notifications_data_pkey PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE registration_otp_request (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        username character varying(100) NOT NULL,
        password_hash character varying NOT NULL,
        phone character varying(30) NOT NULL,
        otp character varying(6) NOT NULL,
        created_on timestamp with time zone NOT NULL,
        fcm_token character varying(200),
        "UsedAt" timestamp with time zone,
        CONSTRAINT registration_otp_request_pkey PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE users (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        username character varying(100) NOT NULL,
        name character varying(200),
        password_hash character varying NOT NULL,
        phone character varying(30) NOT NULL,
        email character varying(200),
        birth_date timestamp with time zone,
        created_on timestamp with time zone NOT NULL,
        last_login timestamp with time zone,
        is_anonymous boolean NOT NULL DEFAULT FALSE,
        is_phone_confirmed boolean NOT NULL DEFAULT FALSE,
        is_email_confirmed boolean NOT NULL DEFAULT FALSE,
        avatar_url character varying,
        avatar_path character varying,
        expire_date timestamp with time zone,
        free_subscription_used integer NOT NULL DEFAULT 0,
        fcm_token character varying(200) NOT NULL,
        normalized_username character varying(100) NOT NULL,
        normalized_email character varying(200),
        CONSTRAINT users_pkey PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE influencer_codes (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        code character varying(100) NOT NULL,
        normalized_code character varying(100) NOT NULL,
        created_at timestamp with time zone NOT NULL,
        expire_at timestamp with time zone,
        number_of_days integer NOT NULL,
        max_influenced_users_count integer NOT NULL DEFAULT 0,
        category_id integer,
        CONSTRAINT influencer_codes_pkey PRIMARY KEY (id),
        CONSTRAINT fk_influencer_code_categories FOREIGN KEY (category_id) REFERENCES influencer_codes_categories (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE login_with_qydha_requests (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        user_id uuid NOT NULL,
        otp character varying(6) NOT NULL,
        created_at timestamp with time zone NOT NULL,
        used_at timestamp with time zone,
        CONSTRAINT login_with_qydha_requests_pkey PRIMARY KEY (id),
        CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE notifications_users_link (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        notification_id integer NOT NULL,
        user_id uuid NOT NULL,
        read_at timestamp with time zone,
        sent_at timestamp with time zone NOT NULL,
        CONSTRAINT notifications_users_link_pkey PRIMARY KEY (id),
        CONSTRAINT fk_notification_at_notification_link_table FOREIGN KEY (notification_id) REFERENCES notifications_data (id) ON DELETE CASCADE,
        CONSTRAINT fk_user_at_notification_link_table FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE phone_authentication_requests (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        otp character varying(6) NOT NULL,
        "UserId" uuid NOT NULL,
        "UsedAt" timestamp with time zone,
        created_on timestamp with time zone NOT NULL,
        CONSTRAINT phone_authentication_requests_pkey PRIMARY KEY (id),
        CONSTRAINT "FK_phone_authentication_requests_users_UserId" FOREIGN KEY ("UserId") REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE purchases (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        iaphub_purchase_id character varying(40) NOT NULL,
        user_id uuid NOT NULL,
        type character varying(10) NOT NULL,
        purchase_date timestamp with time zone NOT NULL,
        productsku character varying(15) NOT NULL,
        number_of_days integer NOT NULL,
        CONSTRAINT purchases_pkey PRIMARY KEY (id),
        CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE update_email_requests (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        email character varying(100) NOT NULL,
        otp character varying(6) NOT NULL,
        created_on timestamp with time zone NOT NULL,
        user_id uuid NOT NULL,
        "UsedAt" timestamp with time zone,
        CONSTRAINT update_email_requests_pkey PRIMARY KEY (id),
        CONSTRAINT "FK_update_email_requests_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE update_phone_requests (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        phone character varying(30) NOT NULL,
        otp character varying(6) NOT NULL,
        created_on timestamp with time zone NOT NULL,
        user_id uuid NOT NULL,
        "UsedAt" timestamp with time zone,
        CONSTRAINT update_phone_requests_pkey PRIMARY KEY (id),
        CONSTRAINT "FK_update_phone_requests_users_user_id" FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE user_baloot_settings (
        user_id uuid NOT NULL,
        is_flipped boolean NOT NULL DEFAULT FALSE,
        is_advanced_recording boolean NOT NULL DEFAULT FALSE,
        is_sakkah_mashdodah_mode boolean NOT NULL DEFAULT FALSE,
        show_who_won_dialog_on_draw boolean NOT NULL DEFAULT FALSE,
        is_numbers_sound_enabled boolean NOT NULL DEFAULT TRUE,
        is_comments_sound_enabled boolean NOT NULL DEFAULT TRUE,
        CONSTRAINT user_baloot_settings_pkey PRIMARY KEY (user_id),
        CONSTRAINT user_baloot_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE user_general_settings (
        user_id uuid NOT NULL,
        enable_vibration boolean NOT NULL DEFAULT TRUE,
        players_names jsonb NOT NULL DEFAULT ('[]'::jsonb),
        teams_names jsonb NOT NULL DEFAULT ('[]'::jsonb),
        CONSTRAINT user_general_settings_pkey PRIMARY KEY (user_id),
        CONSTRAINT user_general_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE user_hand_settings (
        user_id uuid NOT NULL,
        rounds_count integer NOT NULL DEFAULT 7,
        max_limit integer NOT NULL DEFAULT 0,
        teams_count integer NOT NULL DEFAULT 2,
        players_count_in_team integer NOT NULL DEFAULT 2,
        win_using_zat boolean NOT NULL DEFAULT FALSE,
        takweesh_points integer NOT NULL DEFAULT 100,
        CONSTRAINT user_hand_settings_pkey PRIMARY KEY (user_id),
        CONSTRAINT user_hand_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE TABLE user_promo_codes (
        id uuid NOT NULL DEFAULT (uuid_generate_v4()),
        code character varying(50) NOT NULL,
        number_of_days integer NOT NULL,
        created_at timestamp with time zone NOT NULL,
        expire_at timestamp with time zone NOT NULL,
        user_id uuid NOT NULL,
        used_at timestamp with time zone,
        CONSTRAINT user_promo_codes_pkey PRIMARY KEY (id),
        CONSTRAINT fk_user_codes FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX admins_normalized_username_key ON admins (normalized_username);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX admins_username_key ON admins (username);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX influencer_codes_code_key ON influencer_codes (code);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX influencer_codes_normalized_code_key ON influencer_codes (normalized_code);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_influencer_codes_category_id" ON influencer_codes (category_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX influencer_codes_categories_category_name_key ON influencer_codes_categories (category_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_login_with_qydha_requests_user_id" ON login_with_qydha_requests (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_notifications_users_link_notification_id" ON notifications_users_link (notification_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_notifications_users_link_user_id" ON notifications_users_link (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_phone_authentication_requests_UserId" ON phone_authentication_requests ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_purchases_user_id" ON purchases (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_update_email_requests_user_id" ON update_email_requests (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_update_phone_requests_user_id" ON update_phone_requests (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE INDEX "IX_user_promo_codes_user_id" ON user_promo_codes (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX users_email_key ON users (email);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX users_normalized_email_key ON users (normalized_email);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX users_normalized_username_key ON users (normalized_username);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX users_phone_key ON users (phone);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    CREATE UNIQUE INDEX users_username_key ON users (username);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240321154410_InitBeforeEf') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240321154410_InitBeforeEf', '8.0.3');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322030906_SeedAdminAndNotifications') THEN
    INSERT INTO admins (id, created_at, normalized_username, password_hash, role, username)
    VALUES ('aaf6ac5a-cbea-43d3-b5f8-ed200d55fb6f', TIMESTAMPTZ '2024-03-22T03:09:05.496846Z', 'ADMIN', '$2a$11$hHvvaG5hUHkfu7IKADkwK.5jTKeUKzeORqxnRIazqFVvbYjoEa7MG', 'SuperAdmin', 'Admin');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322030906_SeedAdminAndNotifications') THEN
    INSERT INTO notifications_data (id, action_path, action_type, created_at, description, payload, title, visibility)
    VALUES (1, '_', 1, TIMESTAMPTZ '2024-03-22T03:09:05.790077Z', 'نتمنى لك تجربة جميلة، ارسلنا لك هدية بقسم المتجر😉', '{"Image":null}', 'مرحباً بك في قيدها ♥', 3);
    INSERT INTO notifications_data (id, action_path, action_type, created_at, description, payload, title, visibility)
    VALUES (2, '_', 1, TIMESTAMPTZ '2024-03-22T03:09:05.790078Z', 'نتمنى لك تجربة جميلة، لا تنسى قيدها ليس مجرد حاسبة', '{"Image":null}', 'شكرا لثقتك بقيدها..', 3);
    INSERT INTO notifications_data (id, action_path, action_type, created_at, description, payload, title, visibility)
    VALUES (3, '_', 1, TIMESTAMPTZ '2024-03-22T03:09:05.790078Z', 'شيك على المتجر .. تتهنى♥', '{"Image":null}', 'وصلتك هدية..🎁 ', 3);
    INSERT INTO notifications_data (id, action_path, action_type, created_at, description, payload, title, visibility)
    VALUES (4, '_', 1, TIMESTAMPTZ '2024-03-22T03:09:05.790079Z', 'نتمنى لك تجربة ممتعة♥', '{"Image":null}', 'تستاهل ما جاك', 3);
    INSERT INTO notifications_data (id, action_path, action_type, created_at, description, payload, title, visibility)
    VALUES (5, '_', 1, TIMESTAMPTZ '2024-03-22T03:09:05.790079Z', 'إذا عجبك التطبيق لا تنسى تنشره بين أخوياك', '{"Image":null}', 'تم تفعيل الكود', 3);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322030906_SeedAdminAndNotifications') THEN
    PERFORM setval(
        pg_get_serial_sequence('notifications_data', 'id'),
        GREATEST(
            (SELECT MAX(id) FROM notifications_data) + 1,
            nextval(pg_get_serial_sequence('notifications_data', 'id'))),
        false);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322030906_SeedAdminAndNotifications') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240322030906_SeedAdminAndNotifications', '8.0.3');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    DELETE FROM admins
    WHERE id = 'aaf6ac5a-cbea-43d3-b5f8-ed200d55fb6f';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    ALTER TABLE users ALTER COLUMN fcm_token DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    ALTER TABLE registration_otp_request ADD "UserId" uuid;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    INSERT INTO admins (id, created_at, normalized_username, password_hash, role, username)
    VALUES ('d2705466-4304-4830-b48a-3e44e031927e', TIMESTAMPTZ '2024-03-22T15:55:39.229572Z', 'ADMIN', '$2a$11$YSqSTrYLDie0ebfuHwTq.OnODD3S5XH6Zh5YP7wX.Li3/RYkqzYB.', 'SuperAdmin', 'Admin');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2024-03-22T15:55:39.487475Z'
    WHERE id = 1;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2024-03-22T15:55:39.487476Z'
    WHERE id = 2;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2024-03-22T15:55:39.487476Z'
    WHERE id = 3;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2024-03-22T15:55:39.487477Z'
    WHERE id = 4;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2024-03-22T15:55:39.487477Z'
    WHERE id = 5;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    CREATE UNIQUE INDEX "IX_registration_otp_request_UserId" ON registration_otp_request ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    ALTER TABLE registration_otp_request ADD CONSTRAINT "FK_registration_otp_request_users_UserId" FOREIGN KEY ("UserId") REFERENCES users (id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240322155540_UpdateUserFcmNullability') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240322155540_UpdateUserFcmNullability', '8.0.3');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323125038_UpdateSeededData') THEN
    ALTER TABLE notifications_data ALTER COLUMN visibility TYPE text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323125038_UpdateSeededData') THEN
    UPDATE admins SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+02:00', password_hash = '$2a$11$V0A5.EYwXlFUjK3RIis3...A9rfzUm.mO.88MUYW9.uHSZLjURNsC'
    WHERE id = 'd2705466-4304-4830-b48a-3e44e031927e';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323125038_UpdateSeededData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+02:00', visibility = 'Automatic'
    WHERE id = 1;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323125038_UpdateSeededData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+02:00', visibility = 'Automatic'
    WHERE id = 2;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323125038_UpdateSeededData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+02:00', visibility = 'Automatic'
    WHERE id = 3;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323125038_UpdateSeededData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+02:00', visibility = 'Automatic'
    WHERE id = 4;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323125038_UpdateSeededData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+02:00', visibility = 'Automatic'
    WHERE id = 5;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323125038_UpdateSeededData') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240323125038_UpdateSeededData', '8.0.3');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323140408_SeedLoginWithQydhaNotification') THEN
    ALTER TABLE notifications_users_link ADD template_values jsonb NOT NULL DEFAULT ('{}'::jsonb);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323140408_SeedLoginWithQydhaNotification') THEN
    INSERT INTO notifications_data (id, action_path, action_type, created_at, description, payload, title, visibility)
    VALUES (6, '_', 1, TIMESTAMPTZ '2023-11-01T00:00:00+02:00', 'رمز الدخول هو {Otp} تستطيع استخدامه لتسجيل الدخول على {ServiceName} باستخدام حسابك بتطبيق قيدها', '{"Image":null}', 'تسجيل دخول الى {ServiceName}', 'Automatic');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323140408_SeedLoginWithQydhaNotification') THEN
    PERFORM setval(
        pg_get_serial_sequence('notifications_data', 'id'),
        GREATEST(
            (SELECT MAX(id) FROM notifications_data) + 1,
            nextval(pg_get_serial_sequence('notifications_data', 'id'))),
        false);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240323140408_SeedLoginWithQydhaNotification') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240323140408_SeedLoginWithQydhaNotification', '8.0.3');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    ALTER TABLE notifications_data ADD sending_mechanism text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    ALTER TABLE notifications_data ADD template_values jsonb NOT NULL DEFAULT ('{}'::jsonb);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    UPDATE admins SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+00:00'
    WHERE id = 'd2705466-4304-4830-b48a-3e44e031927e';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+00:00', description = 'نتمنى لك تجربة جميلة، ارسلنا لك هدية بقسم المتجر 😉', sending_mechanism = 'Automatic', template_values = '{}', visibility = 'Private'
    WHERE id = 1;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+00:00', sending_mechanism = 'Automatic', template_values = '{}', visibility = 'Private'
    WHERE id = 2;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+00:00', description = 'شيك على المتجر .. تتهنى ♥', sending_mechanism = 'Automatic', template_values = '{}', title = 'وصلتك هدية.. 🎁', visibility = 'Private'
    WHERE id = 3;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+00:00', description = 'نتمنى لك تجربة ممتعة ♥', sending_mechanism = 'Automatic', template_values = '{}', visibility = 'Private'
    WHERE id = 4;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+00:00', sending_mechanism = 'Automatic', template_values = '{}', visibility = 'Private'
    WHERE id = 5;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    UPDATE notifications_data SET created_at = TIMESTAMPTZ '2023-11-01T00:00:00+00:00', sending_mechanism = 'Automatic', template_values = '{}', visibility = 'Private'
    WHERE id = 6;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324230830_TemplateValuesForNotificationData') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240324230830_TemplateValuesForNotificationData', '8.0.3');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324234955_SeedAppAssets') THEN
    INSERT INTO app_assets (asset_key, asset_data)
    VALUES ('baloot_book', '{}');
    INSERT INTO app_assets (asset_key, asset_data)
    VALUES ('popup', '{}');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240324234955_SeedAppAssets') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240324234955_SeedAppAssets', '8.0.3');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240329015743_AddInfluenserCodeUserLink') THEN
    CREATE TABLE influencer_code_users_link (
        influencer_code_id uuid NOT NULL,
        user_id uuid NOT NULL,
        used_at timestamp with time zone NOT NULL,
        number_of_days integer NOT NULL,
        CONSTRAINT influencer_code_users_link_pkey PRIMARY KEY (influencer_code_id, user_id),
        CONSTRAINT fk_influencer_code_at_influencer_code_link_table FOREIGN KEY (influencer_code_id) REFERENCES influencer_codes (id) ON DELETE CASCADE,
        CONSTRAINT fk_user_at_influencer_code_user_link_table FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240329015743_AddInfluenserCodeUserLink') THEN
    CREATE INDEX "IX_influencer_code_users_link_user_id" ON influencer_code_users_link (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240329015743_AddInfluenserCodeUserLink') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240329015743_AddInfluenserCodeUserLink', '8.0.3');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240330225727_ChangeBirthDateToDateAndRemoveRelationBetweenUserAndRegistrationOtp') THEN
    ALTER TABLE registration_otp_request DROP CONSTRAINT "FK_registration_otp_request_users_UserId";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240330225727_ChangeBirthDateToDateAndRemoveRelationBetweenUserAndRegistrationOtp') THEN
    DROP INDEX "IX_registration_otp_request_UserId";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240330225727_ChangeBirthDateToDateAndRemoveRelationBetweenUserAndRegistrationOtp') THEN
    ALTER TABLE users DROP COLUMN free_subscription_used;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240330225727_ChangeBirthDateToDateAndRemoveRelationBetweenUserAndRegistrationOtp') THEN
    ALTER TABLE registration_otp_request DROP COLUMN "UserId";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240330225727_ChangeBirthDateToDateAndRemoveRelationBetweenUserAndRegistrationOtp') THEN
    ALTER TABLE users ALTER COLUMN birth_date TYPE DATE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240330225727_ChangeBirthDateToDateAndRemoveRelationBetweenUserAndRegistrationOtp') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240330225727_ChangeBirthDateToDateAndRemoveRelationBetweenUserAndRegistrationOtp', '8.0.3');
    END IF;
END $EF$;
COMMIT;


